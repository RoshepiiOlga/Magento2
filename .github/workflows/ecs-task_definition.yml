
name: Deploy to Amazon ECS

on:
 workflow_dispatch:
   inputs:
     AWS_ACCOUNT:
       description: 'AWS ACCOUNT'
       required: true
       type: text
       default: 908410081654
     AWS_REGION:
       description: 'AWS REGION'
       required: true
       type: text
       default: eu-west-1
     ECR_REPO:
       description: 'ECR REPOSITORY'
       required: true
       type: choice
       options:
          - common
          - aplication
     CONTAINER_NAME_FIRST:
        description: 'CONTAINER NAME'
        required: true
        type: choice
        options:
          - nginx
          - php
          - php_magento
     IMAGE_TAG_FIRST:
      description: 'IMAGE TAG NGINX'
      required: true
      type: text
      default: latest
     CONTAINER_NAME_SECOND:
       description: 'CONTAINER NAME'
       required: true
       type: choice
       options:
          - nginx
          - php
          - php_magento
     IMAGE_TAG_SECOND:
      description: 'IMAGE TAG PHP'
      required: true
      type: text
      default:  latest     
     ECS_CLUSTER_NAME:
       description: 'ECS CLUSTER'
       required: true
       type: text
       default:  ecs-prod-0001
     ECS_SERVICE_NAME:
       description: 'ECS SERVICE'
       required: true
       type: text
       default:  test2
#      TASK_VERSION:
#        description: 'TASK VERSION'
#        required: true
#        type: text
#        default:  latest
     
env:
  ECS-TASK_DEFENITION-JSON_FILE:             ecs-task-definition.json                                      
   
permissions:
  contents: read

jobs:
  deploy:
    name: Deploy ubuntu
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Git clone repo
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ github.event.inputs.AWS_REGION }}
        
    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1
      
    - name: Testing  
      run: echo "${{ github.event.inputs.AWS_ACCOUNT }}.dkr.ecr.${{ github.event.inputs.AWS_REGION }}.amazonaws.com/${{ github.event.inputs.ECR_REPO }}:${{ github.event.inputs.IMAGE_TAG_FIRST }}"
      
    - name: Render Amazon ECS task definition for first container nginx
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ env.ECS-TASK_DEFENITION-JSON_FILE }}
        container-name: ${{ github.event.inputs.CONTAINER_NAME_FIRST }}
        image: ${{ github.event.inputs.AWS_ACCOUNT }}.dkr.ecr.${{ github.event.inputs.AWS_REGION }}.amazonaws.com/${{ github.event.inputs.ECR_REPO }}:${{ github.event.inputs.IMAGE_TAG_FIRST }}
    
    - name: Render Amazon ECS task definition for second container php
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ env.ECS-TASK_DEFENITION-JSON_FILE }}
        container-name: ${{ github.event.inputs.CONTAINER_NAME_SECOND }}
        image: ${{ github.event.inputs.AWS_ACCOUNT }}.dkr.ecr.${{ github.event.inputs.AWS_REGION }}.amazonaws.com/${{ github.event.inputs.ECR_REPO }}:${{ github.event.inputs.IMAGE_TAG_SECOND }}
        
    - name: Deploy task definition in ECS service
      env:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ github.event.inputs.AWS_REGION }}
      run: |
       aws ecs stop-task --cluster magento-cluster-CI --task 124ba7b6dc814e85b9930d3b1e579dae
       aws ecs update-service --cluster ${{ github.event.inputs.ECS_CLUSTER_NAME }} --service ${{ github.event.inputs.ECS_SERVICE_NAME }} --task-definition CccomboEXIT:9   --force-new-deployment
