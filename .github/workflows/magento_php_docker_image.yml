on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning' 
        type: choice
        options:
        - create a new image
      tags:
        description: 'Test scenario tags'
        required: false 
        type: boolean
env:
  MAGENTO_AWS_REGION:                     eu-west-1  
  MAGENTO_ECR_REPOSITORY:                 magento_ecr_private_rep 
  MAGENTO_ECR_REGISTRY:                   908410081654.dkr.ecr.eu-west-1.amazonaws.com
  MAGENTO_ECS_TD_IMAGE_TAG_PHP:           php
  WORKFLOW_DISPATCH_TAG:                  ${{ github.event.inputs.tags }}
  
name: Create a php image and push to ECR

jobs:
  deploy:
    name: Deploy ubuntu
    runs-on: ubuntu-latest
    permissions:
      packages: write
      
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.MAGENTO_AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      
    - name: Build php image
      run: docker build -t $MAGENTO_ECR_REGISTRY/$MAGENTO_ECR_REPOSITORY:$MAGENTO_ECS_TD_IMAGE_TAG_PHP .
        
    - name: Scan php image 
      if: ${{ env.WORKFLOW_DISPATCH_TAG == 'false' }}
      uses: anchore/scan-action@v3
      continue-on-error: true
      with:
        image: "$MAGENTO_ECR_REGISTRY/$MAGENTO_ECR_REPOSITORY:$MAGENTO_ECS_TD_IMAGE_TAG_PHP"
        fail-build: true
        severity-cutoff:  HIGH, CRITICAL, MEDIUM    
      
    - name: Push php image to ECR 
      if: ${{ env.WORKFLOW_DISPATCH_TAG == 'true' }}
      run: docker push $MAGENTO_ECR_REGISTRY/$MAGENTO_ECR_REPOSITORY:$MAGENTO_ECS_TD_IMAGE_TAG_PHP 
         
